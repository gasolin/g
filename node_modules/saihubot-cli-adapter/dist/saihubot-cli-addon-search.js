"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addons = exports.addonSearch = exports.addonFetch = exports.addonOpenLink = exports.addonExec = void 0;

var _execa = _interopRequireDefault(require("execa"));

var _nodeFetch = _interopRequireDefault(require("node-fetch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const exec = (command, args) => (0, _execa.default)(command, args).stdout.pipe(process.stdout);
/**
 * Open url in browser.
 *
 * @param {String} url
 */


function openTab(url) {
  const openBrowserCmd = process.platform === "win32" ? 'explorer' : 'open';
  exec(openBrowserCmd, [`${url}`]);
}
/**
 * Run local command via execa.
 * https://www.npmjs.com/package/execa
 */


const addonExec = {
  name: 'exec',
  requirements: {
    platform: ['cli']
  },
  action: robot => exec
};
/**
 * Open link in browser.
 */

exports.addonExec = addonExec;
const addonOpenLink = {
  name: 'openLink',
  requirements: {
    platform: ['cli']
  },
  action: robot => url => openTab(url)
};
/**
 * Expose web equivalent fetch API.
 */

exports.addonOpenLink = addonOpenLink;
const addonFetch = {
  name: 'fetch',
  requirements: {
    platform: ['cli']
  },
  action: robot => _nodeFetch.default
};
/**
 * Render search response message.
 *
 * @param {String} action action word
 * @param {String} term search term
 * @param {String} url real search url
 * @param {String} engine search engine
 */

exports.addonFetch = addonFetch;
const addonSearch = {
  name: 'search',
  requirements: {
    adapters: ['cli']
  },
  action: robot => (action, term, url, engine) => {
    robot.send(`${action} [${term}](${url}) via ${engine}`);
    openTab(url);
  }
};
exports.addonSearch = addonSearch;
const addons = [addonSearch, addonOpenLink, addonFetch, addonExec];
exports.addons = addons;