'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addons = exports.addonConfirm = void 0;

var _react = _interopRequireDefault(require("react"));

var _ink = require("ink");

var _inkSelectInput = _interopRequireDefault(require("ink-select-input"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const SelectBox = ({
  handleSelect,
  title,
  items
}) => {
  const {
    exit
  } = (0, _ink.useApp)();
  (0, _ink.useInput)((input, key) => {
    if (input === 'q' || key.escape) {
      exit();
    }
  });
  const options = [];
  items.forEach((item, idx) => {
    options.push({
      label: item.title,
      value: idx
    });
  });
  return /*#__PURE__*/_react.default.createElement(_ink.Box, {
    flexDirection: "column"
  }, /*#__PURE__*/_react.default.createElement(_ink.Text, null, title), /*#__PURE__*/_react.default.createElement(_inkSelectInput.default, {
    items: options,
    onSelect: handleSelect
  }));
}; // addon that provide confirm and selection dialog


const addonConfirm = {
  name: 'confirm',
  requirements: {
    adapters: ['cli']
  },
  action: robot => (title, items) => {
    const handleSelect = item => {
      // `item` = { label: 'First', value: 'first' }
      if (item && items[item.value] && items[item.value].action) {
        items[item.value].action();
      }
    };

    robot.chatHistory.push( /*#__PURE__*/_react.default.createElement(SelectBox, {
      title: title,
      items: items,
      handleSelect: handleSelect
    }));
    robot.render();
  }
};
exports.addonConfirm = addonConfirm;
const addons = [addonConfirm];
exports.addons = addons;