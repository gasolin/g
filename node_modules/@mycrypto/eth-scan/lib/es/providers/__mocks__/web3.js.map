{"version":3,"sources":["../../../../src/providers/__mocks__/web3.ts"],"names":["ethers","Web3","currentProvider","send","payload","callback","id","jsonrpc","params","options","to","data","provider","call","then","result"],"mappings":"AAAA,OAASA,MAAT,KAAuB,oBAAvB,CAGA,cAAe,MAAMC,CAAAA,IAAK,CACxBC,eAAe,CAAG,CAChBC,IAAI,CAACC,CAAD,CAA0BC,CAA1B,CAA0F,MACtF,CACJC,EAAE,CAAFA,CADI,CAEJC,OAAO,CAAPA,CAFI,CAGJC,MAAM,CAAE,CAACC,CAAD,CAHJ,EAIFL,CALwF,CAOtF,CAAEM,EAAE,CAAFA,CAAF,CAAMC,IAAI,CAAJA,CAAN,EAAeF,CAPuE,CAS5FT,MAAM,CAACY,QAAP,CACGC,IADH,CACQ,CACJH,EAAE,CAAFA,CADI,CAEJC,IAAI,CAAJA,CAFI,CADR,EAKGG,IALH,CAKSC,CAAD,EAAY,CAChBV,CAAQ,CAAC,IAAD,CAAO,CACbC,EAAE,CAAFA,CADa,CAEbC,OAAO,CAAPA,CAFa,CAGbQ,MAAM,CAANA,CAHa,CAAP,CAKT,CAXH,CAYD,CAtBe,CADM","sourcesContent":["import { ethers } from '@nomiclabs/buidler';\nimport { JsonRpcPayload } from '../http';\n\nexport default class Web3 {\n  currentProvider = {\n    send(payload: JsonRpcPayload, callback: (error: Error | null, result: unknown) => void): void {\n      const {\n        id,\n        jsonrpc,\n        params: [options]\n      } = payload;\n\n      const { to, data } = options as { to: string; data: string };\n\n      ethers.provider\n        .call({\n          to,\n          data\n        })\n        .then((result) => {\n          callback(null, {\n            id,\n            jsonrpc,\n            result\n          });\n        });\n    }\n  };\n}\n"],"file":"web3.js"}