import{callWithEthers,isEthersProvider}from"./ethers";import{callWithHttp,isHttpProvider}from"./http";import{callWithWeb3,isWeb3Provider}from"./web3";/**
 * Send a call with the data, using the specified provider. If the provider is not a valid provider type (e.g. not a
 * Ethers.js provider, URL or Web3 provider), this will throw an error.
 *
 * @param {ProviderLike} provider
 * @param {string} contractAddress
 * @param {string} data
 * @return {Promise<Buffer>}
 */export const call=async(a,b,c)=>{if(isEthersProvider(a))return callWithEthers(a,b,c);if(isHttpProvider(a))return callWithHttp(a,b,c);if(isWeb3Provider(a))return callWithWeb3(a,b,c);throw new Error("Invalid provider specified")};
//# sourceMappingURL=provider.js.map