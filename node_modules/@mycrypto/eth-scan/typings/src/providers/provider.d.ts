/// <reference types="node" />
import { EthersProviderLike } from './ethers';
import { HttpProviderLike } from './http';
import { Web3ProviderLike } from './web3';
export declare type ProviderLike = HttpProviderLike | EthersProviderLike | Web3ProviderLike;
/**
 * Send a call with the data, using the specified provider. If the provider is not a valid provider type (e.g. not a
 * Ethers.js provider, URL or Web3 provider), this will throw an error.
 *
 * @param {ProviderLike} provider
 * @param {string} contractAddress
 * @param {string} data
 * @return {Promise<Buffer>}
 */
export declare const call: (provider: ProviderLike, contractAddress: string, data: string) => Promise<Buffer>;
//# sourceMappingURL=provider.d.ts.map